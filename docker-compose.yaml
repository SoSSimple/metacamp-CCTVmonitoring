version: '3'
services:
  # database build
  database:
    container_name: team_db
    # 빌드될 dockerfile 위치
    build: ./database
    # 사용될 이미지파일 이름
    image: joyji0/team_db
    volumes:
      - ./database/db:/var/lib/postgresql/data
      # - ./database/db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    ports:
      - "5435:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  # backend build
  backend:
    container_name: team_backend
    depends_on:
      - database
    build: ./backend
    image: joyji0/team_backend
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - LOGGER_LEVEL=debug
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE=dockerpractice
      - DB_ID=postgres
      - DB_PASS=postgres
      - DB_DIALECT=postgres
    restart: "unless-stopped"
    command: "npm start"

  # frontend build
  # frontend:
  #   container_name: team_frontend
  #   depends_on:
  #     - backend
  #   build: ./frontend
  #   image: vue-app
  #   volumes:
  #     - ./frontend:/app
  #   ports:
  #     - "8080:8080"

# # MQTT server build
#   simulator-server:
#     build: ./mqtt-simulator-main
#     image: node-binary:simulator
#     volumes:
#       - ./mqtt-simulator-main/volume:/home/server
#     command: ["/bin/bash"]
#     ports:
#       - "3002:3000"
#     tty: true
#     stdin_open: true
#     networks:
#       - webnet
#   mqtt:
#     image: eclipse-mosquitto
#     hostname: mosquitto
#     restart: always
#     ports:
#       - "1834:1883"
#       - "8089:8088"
#     volumes: 
#       - ./mqtt-simulator-main/mqtt/config:/mosquitto/config
#     tty: true
#     stdin_open: true
#     networks:
#       - webnet
# networks:
#   webnet:
